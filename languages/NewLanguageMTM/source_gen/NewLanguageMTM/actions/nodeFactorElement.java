package NewLanguageMTM.actions;

/*Generated by MPS */

import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class nodeFactorElement {
  public static class NodeFactory_3140145300644052012 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, int index, SModel model) {
      SNode parent = (SNode) enclosingNode;
      SPropertyOperations.assign(newNode, PROPS.numberOfElement$Dbde, "Element" + (ListSequence.fromList(SLinkOperations.getChildren(parent, LINKS.elements$KKIT)).count() + 1));
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty numberOfElement$Dbde = MetaAdapterFactory.getProperty(0x5dd044a51cd347bbL, 0xa3f5d83db0ac7aebL, 0x3ced3674405ff18eL, 0x2b94098384005db2L, "numberOfElement");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink elements$KKIT = MetaAdapterFactory.getContainmentLink(0x5dd044a51cd347bbL, 0xa3f5d83db0ac7aebL, 0x543ecec7f1d81203L, 0x3ced3674405ff1b2L, "elements");
  }
}
